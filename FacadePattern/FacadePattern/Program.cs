using FacadePattern.Classes;
using FacadePattern.Classes.FacadeClasses;
using FacadePattern.Classes.Subsystems;
using System;

namespace FacadePattern
{
    class Program
    {
        static void Main(string[] args)
        { 
            Client Andrew = new();  //Создаём объект
            Andrew.OrderLaptop(new Facade(
                new Delivery(), new Package(), new PaymentSystem(), new Provider(), new Taxes(), new Warehouse())); //Вызывам метод заказа
        }

        /*
         Паттерн фасад

         Паттерн фасад предоставляет простой интерфейс для взаимодействия со сложной системой классов.

         Когда использовать паттерн фасад:
         1.Когда нужно предоставить простой интерфейс к сложной системе классов.
         2.Когда необходимо разложить сложную систему классов на слои.
         
         Шаги реализации:
         1.Подумайте нужно ли создать более простой интерфейс, чем тот, который предоставляет сложная подсистема.
         2.Создайте класс фасада и позаботьтесь о том, чтобы правильно инициализировать объекты подсистемы.(Лучше всего использовать агрегацию)
         3.Клиент должен работать только с фасадом.
         4.Если одного фасада не хватает можно создать дополнительный.
        
         Плюсы:
         1.Изолирует клиентов от компонентов сложной подсистемы.
    
         Минуcы:
         1.Фасад может содержать в себе слишном много логики. (Божественный объект)
         
         */
    }
}
